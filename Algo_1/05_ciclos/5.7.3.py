# a) Escribir un programa que contenga una contrase√±a inventada, que le pregunte al usua-
# rio la contrase√±a, y no le permita continuar hasta que la haya ingresado correctamente.
# b) Modificar el programa anterior para que solamente permita una cantidad fija de inten-
# tos.
# c) Modificar el programa anterior para que despu√©s de cada intento agregue una pausa
# cada vez mayor, utilizando la funci√≥n sleep del m√≥dulo time.
# d) Modificar el programa anterior para que sea una funci√≥n que devuelva si el usuario
# ingres√≥ o no la contrase√±a correctamente, mediante un valor booleano (True o False).

# a.
def adivinar_contrase√±a():
    "Pide al usuario que ingrese una contrase√±a y no lo deja continuar hasta ingresarla correctamente."
    # Define la contrase√±a correcta como una constante.
    CONTRASE√ëA = "Francia2"
    # Solicita al usuario ingresar una contrase√±a.
    contrase√±a = input("Pass: ")
    # Comienza un bucle mientras la contrase√±a ingresada no sea igual a la contrase√±a correcta.
    while contrase√±a != CONTRASE√ëA:
        # Imprime un mensaje de error.
        print("Contrase√±a incorrecta. Intente de nuevo")
        # Solicita al usuario ingresar la contrase√±a nuevamente.
        contrase√±a = input("Pass: ")
    # Cuando la contrase√±a ingresada es correcta, imprime un mensaje de acceso otorgado.
    print("Acceso otorgado üññüèº")

# Llamada a la funci√≥n para ejecutar el programa.
# adivinar_contrase√±a()

# b.
def adivinar_contrase√±a():
    """
    Solicita al usuario ingresar una contrase√±a y permite un n√∫mero limitado de intentos.
    """
    # Define la contrase√±a correcta como una constante.
    CONTRASE√ëA = "Francia2"
    # Establece el n√∫mero m√°ximo de intentos permitidos.
    intentos_permitidos = 3
    # Solicita al usuario ingresar la contrase√±a y muestra el n√∫mero de intentos restantes.
    contrase√±a = input(f"Pass (Restan {intentos_permitidos} intentos): ")
    # Inicia un bucle while que se ejecutar√° mientras la contrase√±a ingresada sea incorrecta.
    while contrase√±a != CONTRASE√ëA:
        # Reduce el contador de intentos permitidos en 1.
        intentos_permitidos -= 1
        # Verifica si se agotaron los intentos permitidos.
        if intentos_permitidos == 0:
            print("Intentos agotados. Intente de nuevo luego de un tiempo ‚åõ")
            return  # Sale de la funci√≥n si se agotan los intentos.
        # Muestra un mensaje de error y solicita al usuario ingresar la contrase√±a nuevamente.
        print("Contrase√±a incorrecta. Intente de nuevo")
        contrase√±a = input(f"Pass (Restan {intentos_permitidos} intentos): ")
    # Cuando la contrase√±a ingresada es correcta, imprime un mensaje de acceso otorgado.
    print("Acceso otorgado üññüèº")

# Llamada a la funci√≥n para ejecutar el programa.
adivinar_contrase√±a()