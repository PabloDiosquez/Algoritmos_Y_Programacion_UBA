# TDA Pila üìö LIFO (Last in, First out)

# crear_vac√≠a() ‚û° P    O(1)
# apilar(P, x)          O(1)
# desapilar(P)  ‚û° x    O(1)
# ver_tope(P)   ‚û° x    O(1)
# est√°_vac√≠a(P) ‚û° bool O(1)



# Implementaci√≥n con nodos 

class Pila:

    def __init__(self):
        self.tope = None 

    def apilar(self, dato):
        # nuevo_tope = Nodo(dato, self.tope)
        # self.tope  = nuevo_tope
        self.tope = Nodo(dato, self.tope)

    def desapilar(self):
        pass 
    
    def ver_tope(self):
        pass  

    def est√°_vac√≠a(self):
        pass 
    

class Nodo:

    def __init__(self, dato, prox):
        self.dato = dato 
        self.prox = prox